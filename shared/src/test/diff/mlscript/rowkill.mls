
:NoJS

r1 = {y = 2} : {x: 1; y: 2} | ~{x: nothing}
//│ r1: {x: 1, y: 2} | ~{x: nothing}

r1 : {y: 2}
//│ res: {y: 2}

r1.y
//│ res: 2

:e
r1.x
//│ ╔══[ERROR] Type mismatch in field selection:
//│ ║  l.14: 	r1.x
//│ ║        	^^^^
//│ ╟── type `~{x: nothing}` does not have field 'x'
//│ ║  l.4: 	r1 = {y = 2} : {x: 1; y: 2} | ~{x: nothing}
//│ ║       	                              ^^^^^^^^^^^^^
//│ ╟── but it flows into reference with expected type `{x: ?x}`
//│ ║  l.14: 	r1.x
//│ ╙──      	^^
//│ res: 1 | error

r2 = {x = false; y = 2} : ({x: 1; y: 2} | ~{x: nothing}) & {x: false}
//│ r2: {x: false} & ~{x: nothing} | {x: nothing, y: 2}

r2 : {x: false; y: 2}
//│ res: {x: false, y: 2}

fun x -> fun y -> x ++ y
//│ res: 'a -> ({$fields: 'a} & 'b) -> ('a & 'b)

r3 = {x = 1; y = true} ++ {y = 2}
//│ r3: {$fields: ~{y: nothing}, y: 2} & ~{y: nothing} | {$fields: ~{y: nothing}, x: 1, y: nothing}

r3 : {x: 1; y: 2}
//│ res: {x: 1, y: 2}

r4 = {y = false; z = "a"} ++ r3
//│ r4: {$fields: ~{y: nothing}, y: 2} & ~{y: nothing} | {$fields: ~{y: nothing}, x: 1, y: nothing, z: "a"}

r4 : {x: 1; y: 2; z: "a"}
//│ res: {x: 1, y: 2, z: "a"}

r5 = r4 ++ ({w = 42} : {w: 42})
//│ r5: {w: 42}
